@prefix ndc-pm: <https://w3id.org/network-data-catalog/platform#> .
@prefix ndc-sr: <https://w3id.org/network-data-catalog/server#> .
@prefix mod: <https://w3id.org/mod#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix core: <https://ontology.unifiedcyberontology.org/uco/core/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix vann: <http://purl.org/vocab/vann/> .
@prefix schema: <http://schema.org/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix observable: <https://ontology.unifiedcyberontology.org/uco/observable/> .
@base <http://example.org/> .

#set ($xs = $reader.getDataframe('{
    "iterator": "$",
    "paths": {
        "deviceId": "device_id",
        "platform": "platform",
        "os_name": "os_name",
        "os_version": "os_version",
        "vendor": "vendor",
        "address" : "netconf.address",
        "netconf_port": "netconf.port",
        "netconf_username": "netconf.credentials.username",
        "netconf_password": "netconf.credentials.password",
        "gnmi_port": "gnmi.port",
        "gnmi_username": "gnmi.credentials.username",
        "gnmi_password": "gnmi.credentials.password"
    }
}'))

#foreach($x in $xs)
#set($normalizedVendor = $x.vendor.toUpperCase())
#set($normalizedPlatform = $x.platform.replace(" ", "_"))
#set($normalizedOsName = $x.os_name.replace(" ", "_"))

<NetworkDevice/${x.deviceId}> rdf:type ndc-sr:NetworkDevice ;
    ndc-sr:deviceId "$x.deviceId" ;
    ndc-pm:platform <Platform/$normalizedPlatform> ;
    ndc-pm:operatingSystem <OperatingSystem/$normalizedOsName/${x.os_version}> ;
    ndc-sr:runsYangServer <NetworkDevice/${x.deviceId}/NetconfServer> ;
.

<Platform/$normalizedPlatform> rdf:type ndc-pm:Platform ;
    ndc-pm:platformName "$x.platform" ;
    ndc-pm:vendor <Vendor/$normalizedVendor> ;
.

<OperatingSystem/$normalizedOsName/${x.os_version}> rdf:type ndc-pm:OperatingSystem ;
    ndc-pm:osName "${x.os_name}" ;
    ndc-pm:osVersion "${x.os_version}" ;
    ndc-pm:vendor <Vendor/$normalizedVendor> ;
.

<Vendor/$normalizedVendor> rdf:type ndc-pm:Vendor ;
    schema:name "$normalizedVendor" ;
.

<NetworkDevice/${x.deviceId}/NetconfServer> rdf:type ndc-sr:NetconfServer ;
    ndc-sr:socketAddress <NetworkDevice/${x.deviceId}/NetconfServer/SocketAddress> ;
    ndc-sr:serverAccount <NetworkDevice/${x.deviceId}/NetconfServer/ServerAccount> ;
.

<NetworkDevice/${x.deviceId}/NetconfServer/SocketAddress> a observable:SocketAddress ;
    observable:addressValue "${x.address}:${x.netconf_port}"
.

<NetworkDevice/${x.deviceId}/NetconfServer/ServerAccount>  a ndc-sr:ServerAccount ;
    ndc-sr:username "$x.netconf_username" ;
    core:hasFacet <NetworkDevice/${x.deviceId}/NetconfServer/AccountAuthenticationFacet> ;
.

<NetworkDevice/${x.deviceId}/NetconfServer/AccountAuthenticationFacet> a observable:AccountAuthenticationFacet ;
    observable:password "$x.netconf_password" ;
    observable:passwordType "plain-text" ;
.

#if($x.gnmi_port)
<NetworkDevice/${x.deviceId}> ndc-sr:runsYangServer <NetworkDevice/${x.deviceId}/GnmiServer> .

<NetworkDevice/${x.deviceId}/GnmiServer> rdf:type ndc-sr:GnmiServer ;
    ndc-sr:socketAddress <NetworkDevice/${x.deviceId}/GnmiServer/SocketAddress> ;
    ndc-sr:serverAccount <NetworkDevice/${x.deviceId}/GnmiServer/ServerAccount> ;
.

<NetworkDevice/${x.deviceId}/GnmiServer/SocketAddress> a observable:SocketAddress ;
    observable:addressValue "${x.address}:${x.gnmi_port}" ;
.

<NetworkDevice/${x.deviceId}/GnmiServer/ServerAccount> a ndc-sr:ServerAccount ;
    ndc-sr:username "$x.gnmi_username" ;
    core:hasFacet <NetworkDevice/${x.deviceId}/GnmiServer/AccountAuthenticationFacet> ;
.

<NetworkDevice/${x.deviceId}/GnmiServer/AccountAuthenticationFacet> a observable:AccountAuthenticationFacet ;
    observable:password "$x.gnmi_password" ;
    observable:passwordType "plain-text" ;
.
#end
#end
